// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: metrics.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MetricsResponse carries CPU and RAM usage, plus optional GPU info.
type MetricsResponse struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	HostId string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	// CPU usage as a percentage (0.0–100.0)
	CpuUsagePercent float64 `protobuf:"fixed64,2,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`
	// Memory used, in megabytes
	MemoryUsedMb float64 `protobuf:"fixed64,3,opt,name=memory_used_mb,json=memoryUsedMb,proto3" json:"memory_used_mb,omitempty"`
	// Total memory, in megabytes
	MemoryTotalMb float64 `protobuf:"fixed64,4,opt,name=memory_total_mb,json=memoryTotalMb,proto3" json:"memory_total_mb,omitempty"`
	// Optional GPU information; may be empty if no GPU is present or NVML fails to initialize.
	Gpu           *GPUInfo `protobuf:"bytes,5,opt,name=gpu,proto3" json:"gpu,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsResponse) Reset() {
	*x = MetricsResponse{}
	mi := &file_metrics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsResponse) ProtoMessage() {}

func (x *MetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsResponse.ProtoReflect.Descriptor instead.
func (*MetricsResponse) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *MetricsResponse) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *MetricsResponse) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *MetricsResponse) GetMemoryUsedMb() float64 {
	if x != nil {
		return x.MemoryUsedMb
	}
	return 0
}

func (x *MetricsResponse) GetMemoryTotalMb() float64 {
	if x != nil {
		return x.MemoryTotalMb
	}
	return 0
}

func (x *MetricsResponse) GetGpu() *GPUInfo {
	if x != nil {
		return x.Gpu
	}
	return nil
}

// GPUInfo holds a single GPU’s name and temperature.
type GPUInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Human-readable GPU model name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Temperature in degrees Celsius
	TemperatureCelsius float64 `protobuf:"fixed64,2,opt,name=temperature_celsius,json=temperatureCelsius,proto3" json:"temperature_celsius,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GPUInfo) Reset() {
	*x = GPUInfo{}
	mi := &file_metrics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GPUInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPUInfo) ProtoMessage() {}

func (x *GPUInfo) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPUInfo.ProtoReflect.Descriptor instead.
func (*GPUInfo) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *GPUInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GPUInfo) GetTemperatureCelsius() float64 {
	if x != nil {
		return x.TemperatureCelsius
	}
	return 0
}

var File_metrics_proto protoreflect.FileDescriptor

const file_metrics_proto_rawDesc = "" +
	"\n" +
	"\rmetrics.proto\x12\ametrics\x1a\x1bgoogle/protobuf/empty.proto\"\xc8\x01\n" +
	"\x0fMetricsResponse\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12*\n" +
	"\x11cpu_usage_percent\x18\x02 \x01(\x01R\x0fcpuUsagePercent\x12$\n" +
	"\x0ememory_used_mb\x18\x03 \x01(\x01R\fmemoryUsedMb\x12&\n" +
	"\x0fmemory_total_mb\x18\x04 \x01(\x01R\rmemoryTotalMb\x12\"\n" +
	"\x03gpu\x18\x05 \x01(\v2\x10.metrics.GPUInfoR\x03gpu\"N\n" +
	"\aGPUInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12/\n" +
	"\x13temperature_celsius\x18\x02 \x01(\x01R\x12temperatureCelsius2P\n" +
	"\x0eMetricsService\x12>\n" +
	"\n" +
	"GetMetrics\x12\x16.google.protobuf.Empty\x1a\x18.metrics.MetricsResponseB4Z2github.com/Billy-Davies-2/tui-chat/pkg/proto;protob\x06proto3"

var (
	file_metrics_proto_rawDescOnce sync.Once
	file_metrics_proto_rawDescData []byte
)

func file_metrics_proto_rawDescGZIP() []byte {
	file_metrics_proto_rawDescOnce.Do(func() {
		file_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_metrics_proto_rawDesc), len(file_metrics_proto_rawDesc)))
	})
	return file_metrics_proto_rawDescData
}

var file_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_metrics_proto_goTypes = []any{
	(*MetricsResponse)(nil), // 0: metrics.MetricsResponse
	(*GPUInfo)(nil),         // 1: metrics.GPUInfo
	(*emptypb.Empty)(nil),   // 2: google.protobuf.Empty
}
var file_metrics_proto_depIdxs = []int32{
	1, // 0: metrics.MetricsResponse.gpu:type_name -> metrics.GPUInfo
	2, // 1: metrics.MetricsService.GetMetrics:input_type -> google.protobuf.Empty
	0, // 2: metrics.MetricsService.GetMetrics:output_type -> metrics.MetricsResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_metrics_proto_init() }
func file_metrics_proto_init() {
	if File_metrics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_metrics_proto_rawDesc), len(file_metrics_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metrics_proto_goTypes,
		DependencyIndexes: file_metrics_proto_depIdxs,
		MessageInfos:      file_metrics_proto_msgTypes,
	}.Build()
	File_metrics_proto = out.File
	file_metrics_proto_goTypes = nil
	file_metrics_proto_depIdxs = nil
}
